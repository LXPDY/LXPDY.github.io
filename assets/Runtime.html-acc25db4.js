const e=JSON.parse('{"key":"v-de897218","path":"/demo/Runtime.html","title":"Runtime机制","lang":"zh-CN","frontmatter":{"title":"Runtime机制","order":3,"icon":"file","author":"Fuyuyu","category":["学习日记"],"tag":["Objective-C","进阶学习"],"footer":"努力努力再努力","copyright":"文章内容归作者所有，不保证完全正确","comment":true,"description":"引子 学到OC，看到的文章中隐约中提到了OC的所谓“函数调用”其实是向持有类/实例发送消息从而达到调用效果，进一步了解OC的内存管理机制后，发现不同于C++，OC的内存管理有ARC、自动释放池这些“魔法”机制，而这些机制的又建立在这个神秘的Runtime机制上。 笔者的这篇文章大部分翻译自苹果，部分参考杨老师的文章，【】和代码块中是我添加的想法。 参考...","head":[["meta",{"property":"og:url","content":"https://fuyuyu.online/demo/Runtime.html"}],["meta",{"property":"og:site_name","content":"Fuyuyuの小站"}],["meta",{"property":"og:title","content":"Runtime机制"}],["meta",{"property":"og:description","content":"引子 学到OC，看到的文章中隐约中提到了OC的所谓“函数调用”其实是向持有类/实例发送消息从而达到调用效果，进一步了解OC的内存管理机制后，发现不同于C++，OC的内存管理有ARC、自动释放池这些“魔法”机制，而这些机制的又建立在这个神秘的Runtime机制上。 笔者的这篇文章大部分翻译自苹果，部分参考杨老师的文章，【】和代码块中是我添加的想法。 参考..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-20T02:53:10.000Z"}],["meta",{"property":"article:author","content":"Fuyuyu"}],["meta",{"property":"article:tag","content":"Objective-C"}],["meta",{"property":"article:tag","content":"进阶学习"}],["meta",{"property":"article:modified_time","content":"2023-10-20T02:53:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Runtime机制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-10-20T02:53:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Fuyuyu\\"}]}"]]},"headers":[{"level":2,"title":"引子","slug":"引子","link":"#引子","children":[{"level":3,"title":"为什么要引入Runtime机制","slug":"为什么要引入runtime机制","link":"#为什么要引入runtime机制","children":[]}]},{"level":2,"title":"与Runtime交互","slug":"与runtime交互","link":"#与runtime交互","children":[{"level":3,"title":"源代码交互","slug":"源代码交互","link":"#源代码交互","children":[]},{"level":3,"title":"NSObject方法交互","slug":"nsobject方法交互","link":"#nsobject方法交互","children":[]},{"level":3,"title":"Runtime函数","slug":"runtime函数","link":"#runtime函数","children":[]}]},{"level":2,"title":"Messaging消息函数","slug":"messaging消息函数","link":"#messaging消息函数","children":[{"level":3,"title":"引子","slug":"引子-1","link":"#引子-1","children":[]},{"level":3,"title":"The objc_msgSend Function 消息发送函数","slug":"the-objc-msgsend-function-消息发送函数","link":"#the-objc-msgsend-function-消息发送函数","children":[]},{"level":3,"title":"使用隐藏参数","slug":"使用隐藏参数","link":"#使用隐藏参数","children":[]},{"level":3,"title":"获取方法地址","slug":"获取方法地址","link":"#获取方法地址","children":[]}]},{"level":2,"title":"Dynamic Method Resolution 动态方法解析","slug":"dynamic-method-resolution-动态方法解析","link":"#dynamic-method-resolution-动态方法解析","children":[{"level":3,"title":"Dynamic Method Resolution","slug":"dynamic-method-resolution","link":"#dynamic-method-resolution","children":[]},{"level":3,"title":"Dynamic Loading 动态加载","slug":"dynamic-loading-动态加载","link":"#dynamic-loading-动态加载","children":[]}]},{"level":2,"title":"Message Forwarding 消息转发","slug":"message-forwarding-消息转发","link":"#message-forwarding-消息转发","children":[{"level":3,"title":"Forwarding 转发机制","slug":"forwarding-转发机制","link":"#forwarding-转发机制","children":[]}]}],"git":{"createdTime":1697723616000,"updatedTime":1697770390000,"contributors":[{"name":"lx_pdy","email":"1747343655@qq.com","commits":6}]},"readingTime":{"minutes":15.99,"words":4796},"filePathRelative":"demo/Runtime.md","localizedDate":"2023年10月19日","autoDesc":true}');export{e as data};
