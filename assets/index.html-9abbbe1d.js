import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c as o,b as n,d as s,a as c,f as i}from"./app-b656ba31.js";const l={},u=n("h1",{id:"【wip】kokomi-app",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#【wip】kokomi-app","aria-hidden":"true"},"#"),s(" 【WIP】Kokomi App")],-1),r=n("h2",{id:"简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),s(" 简介")],-1),d=n("p",null,"基于Flutter开发的跨平台战舰世界战绩查询App",-1),k={href:"http://www.wows-coral.com:443/docs#/%E7%94%A8%E6%88%B7%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3/user_basic_user_info__get",target:"_blank",rel:"noopener noreferrer"},v=i(`<p>现阶段处于设计以及技术实验中。</p><h1 id="技术实现" tabindex="-1"><a class="header-anchor" href="#技术实现" aria-hidden="true">#</a> 技术实现</h1><h2 id="dart-http请求以及返回实验" tabindex="-1"><a class="header-anchor" href="#dart-http请求以及返回实验" aria-hidden="true">#</a> .dart - Http请求以及返回实验</h2><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">void</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _loading <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    _text <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;正在请求...&quot;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// 发送GET请求</span>
    <span class="token keyword">final</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;http://sample.com&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 读取响应内容</span>
    _text <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _text <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;请求失败：</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">e</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _loading <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于以上函数可以发送http请求，但是无法使得web App正确运行，通过调查可能是因为CORS（跨来源资源共享）策略所导致的。在Web环境下，浏览器会对跨域请求进行限制，而在iOS或Android应用中则不存在这种限制。</p>`,5);function m(h,_){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,r,d,n("p",null,[s("使用"),n("a",k,[s("Kokomi API"),c(a)]),s("进行数据支持")]),v])}const w=t(l,[["render",m],["__file","index.html.vue"]]);export{w as default};
